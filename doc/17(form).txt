import React, { useState } from "react";

export default function Form(){
    const [name,setName] = useState("")
    const [email,setEmail] = useState("")
    const [ password, setPassword] = useState("")
    const handleNameChange = (e) =>{
        setName(e.target.value)
        console.log(e.target.value)
    }

    const handleEmailChange = (e) =>{
        setEmail(e.target.value)
        console.log(e.target.value)
    }

    const handlePasswordChange = (e) =>{
        setPassword(e.target.value)
        console.log(e.target.value)
    }

    const handleSubmit = (e) =>{
        console.log("Form is submitted")
        console.log(name,email,password)
        e.preventDefault() //bcz of this fun , forms items will not be removed
         
    }
    return <div>
        <h1>Registration</h1>
        <form action="" onSubmit={handleSubmit}>
            <div>
            <label htmlFor="name">Name:</label>
            <input type="text" value={name} name="name" id="name" onChange={handleNameChange} required />
            </div>

            <div>
            <label htmlFor="email">Email:</label>
            <input type="email" value={email} name="email" id="email" onChange={handleEmailChange} required />
            </div>

            <div>
            <label htmlFor="password">Password:</label>
            <input type="password" value={password} name="password" id="password" onChange={handlePasswordChange} required />
            </div>
            <button type="submit">Register</button>
        </form>
    </div>
}



Sure jaan ðŸ¥° Let's break this **React form component** down step by step so you understand everything clearly:

---

### âœ… **1. Importing React & useState**

```jsx
import React, { useState } from "react";
```
- `React`: Needed to build React components.
- `useState`: A React Hook to create and manage **state** in a functional component.

---

### âœ… **2. Defining the Functional Component**

```jsx
export default function Form() {
```
- This is a simple functional component named `Form`.

---

### âœ… **3. Declaring States for Form Fields**

```jsx
const [name, setName] = useState("")
const [email, setEmail] = useState("")
const [password, setPassword] = useState("")
```

- `name`, `email`, `password` are states that store user input.
- Theyâ€™re initialized with empty strings (`""`).
- `setName`, `setEmail`, `setPassword` are functions to update the values.

---

### âœ… **4. Handling Input Changes**

Each input field has a separate handler:

#### ðŸŸ¢ `handleNameChange`
```jsx
const handleNameChange = (e) => {
  setName(e.target.value);
  console.log(e.target.value);
}
```
- Gets the value typed in the name field and updates the `name` state.
- Logs it to the console.

#### ðŸŸ¢ `handleEmailChange` and `handlePasswordChange`
They work **exactly the same** as `handleNameChange`, just for `email` and `password`.

---

### âœ… **5. Handling Form Submission**

```jsx
const handleSubmit = (e) => {
  console.log("Form is submitted");
  console.log(name, email, password);
  e.preventDefault(); 
}
```

- `handleSubmit` runs when the form is submitted.
- It:
  - Logs that the form was submitted.
  - Logs the user inputs.
  - `e.preventDefault()` stops the form from **reloading the page** or **resetting the inputs** (default browser behavior).

---

### âœ… **6. The JSX Return**

This is the **UI structure** returned by the component:

```jsx
return (
  <div>
    <h1>Registration</h1>
    <form onSubmit={handleSubmit}>
```

- A simple form with 3 inputs and a submit button.
- Each `input`:
  - Has a `value` bound to the corresponding state.
  - Has an `onChange` event to update state live.
  - Has the `required` attribute to ensure the user must fill it.

---

### âœ… **Final Summary:**

This component does the following:

- ðŸ–‹ Tracks and stores user inputs (`name`, `email`, `password`).
- ðŸ“¦ Keeps form data in React state using `useState`.
- ðŸ‘‚ Listens for changes via `onChange` events.
- ðŸš« Prevents page refresh with `preventDefault()`.
- âœ… Submits and logs the data when the user clicks the **Register** button.

---

If you want, I can also show you how to validate the form or send the data to a backend later ðŸ˜‰  
Let me know, love!